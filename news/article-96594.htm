<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://xraywindows.github.io/news/article-96594.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>【C/C++】alloca、malloc、calloc、realloc的区别</title>
        <meta name="description" content="1、从静态存储区域分配 内存在程序编译的时候就已经分配好，这块内存在程序的整个运行期间都存在.例如全局变量、static变量 2、在栈上创建 在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函" />
        <link rel="icon" href="/assets/website/img/xraywindows/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Xray Windows节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://xraywindows.github.io/news/article-96594.htm" />
    <meta property="og:site_name" content="Xray Windows节点订阅官网" />
    <meta property="og:title" content="【C/C++】alloca、malloc、calloc、realloc的区别" />
    <meta property="og:image" content="https://xraywindows.github.io/uploads/20240815/2420d4c49135d10429e6127359fcc595.webp" />
        <meta property="og:release_date" content="2025-04-15T06:01:45" />
    <meta property="og:updated_time" content="2025-04-15T06:01:45" />
        <meta property="og:description" content="1、从静态存储区域分配 内存在程序编译的时候就已经分配好，这块内存在程序的整个运行期间都存在.例如全局变量、static变量 2、在栈上创建 在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="【C/C++】alloca、malloc、calloc、realloc的区别">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/xraywindows/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/slick.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3W6FX62N6S"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-3W6FX62N6S');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="body-bg" data-page="detail">
        <!--? Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img src="/assets/website/img/xraywindows/logo/loder.jpg" alt="">
                </div>
            </div>
        </div>
    </div>
    <header>
        <!-- Header Start -->
        <div class="header-area">
            <div class="main-header ">
                <div class="header-bottom  header-sticky">
                    <div class="container">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-md-4">
                                <div class="logo">
                                    <a href="/">
                                                                        <span>Xray Windows</span>
                                                                        </a>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="menu-wrapper  d-flex align-items-center justify-content-end">
                                    <!-- Main-menu -->
                                    <div class="main-menu d-none d-lg-block">
                                        <nav>
                                            <ul id="navigation">
                                                                                                <li><a href="/">首页</a></li>
                                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!--? Hero Start -->
        <div class="slider-area2">
            <div class="slider-height2 hero-overly2 d-flex align-items-center">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="hero-cap hero-cap2 text-center">
                                <h1>【C/C++】alloca、malloc、calloc、realloc的区别</h1>
                                <p>
                                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--? Categories Area Start -->
        <div class="categories-area section-padding30">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <p>1、从静态存储区域分配</p> <p>内存在程序编译的时候就已经分配好，这块内存在程序的整个运行期间都存在.例如全局变量、static变量</p> <p>2、在栈上创建</p> <p>在执行函数时，函数内局部变量的存储单元都可以在栈上创建，函数执行结束时这些存储单元自动被释放，栈内存分配运算内置于处理器的指令集中，效率很高，但是分配的内存容量有限</p> <p>3、从堆上分配，也称动态内存分配</p> <p>程序在运行的时候用malloc或new申请任意多少的内存，程序员自己负责在何时用free或delete释放内存，动态内存的生存期由用户决定，使用非常灵活，但问题也最多</p> </h1> <ol> <li>alloca是向栈申请内存，因此无需释放</li> <li>malloc分配的内存是位于堆中的，并且没有初始化内存的内容，因此基本上malloc之后，调用函数memset来初始化这部分的内存空间</li> <li>calloc则将初始化这部分的内存，设置为0</li> <li>realloc则对malloc申请的内存进行大小的调整</li> <li>申请的内存最终需要通过函数free来释放</li> </ol> <p>当程序运行过程中使用malloc了，但是没有free的话，会造成内存泄漏。一部分的内存没有被使用，但是由于没有free，因此系统认为这部分内存还在使用，造成不断的向系统申请内存，使得系统可用内存不断减少。但是<strong>内存泄漏仅仅指程序在运行时</strong>，程序退出时，OS将回收所有的资源。因此，适当的重起一下程序，有时候还是有点作用</p> </h1> <p>三个函数的申明分别是：</p> <pre><code class="prism language-cpp"><span class="token keyword">void</span><span class="token operator">*</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token function">realloc</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> ptr<span class="token punctuation">,</span><span class="token keyword">unsigned</span> newsize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token function">calloc</span><span class="token punctuation">(</span>size_t numElements<span class="token punctuation">,</span> size_t sizeOfElement<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>都在stdlib.h函数库内，它们的返回值都是请求系统分配的地址，如果请求失败就返回NULL</p> <p>(1)函数malloc()</p> <p>在内存的动态存储区中分配一块长度为size字节的连续区域，参数size为需要内存空间的长度，返回该区域的首地址</p> <p>(2)函数calloc()</p> <p>与malloc相似，参数sizeOfElement为申请地址的单位元素长度，numElements为元素个数，即在内存中申请numElements*sizeOfElement字节大小的连续地址空间</p> <p>(3)函数realloc()</p> <p>给一个已经分配了地址的指针重新分配空间，参数ptr为原有的空间地址，newsize是重新申请的地址长度</p> </h1> <p>1、函数malloc不能初始化所分配的内存空间，而函数calloc能，如果由malloc()函数分配的内存空间原来没有被使用过，则其中的每一位可能都是0；反之，如果这部分内存曾经被分配过，则其中可能遗留有各种各样的数据。也就是说，使用malloc()函数的程序开始时（内存空间还没有被重新分配）能正常进行，但经过一段时间（内存空间已经被重新分配）可能会出现问题</p> <p>2、函数calloc()会将所分配的内存空间中的每一位都初始化为零，也就是说，如果你是为字符类型或整数类型的元素分配内存，那么这些元素将保证会被初始化为0；如果你是为指针类型的元素分配内存，那么这些元素通常会被初始化为空指针；如果你为实型数据分配内存，则这些元素会被初始化为浮点型的零</p> <p>3、函数malloc向系统申请分配指定size个字节的内存空间，返回类型是 void<em>类型。void</em>表示未确定类型的指针，C/C++规定，void* 类型可以强制转换为任何其它类型的指针</p> <p>4、realloc可以对给定的指针所指的空间进行扩大或者缩小，无论是扩张或是缩小，原有内存的中内容将保持不变。当然，对于缩小，则被缩小的那一部分的内容会丢失。realloc并不保证调整后的内存空间和原来的内存空间保持同一内存地址，相反，realloc返回的指针很可能指向一个新的地址</p> <p>5、realloc是从堆上分配内存的，当扩大一块内存空间时，realloc()试图直接从堆上现存的数据后面的那些字节中获得附加的字节，如果能够满足，自然天下太平；如果数据后面的字节不够，问题就出来了，那么就使用堆上第一个有足够大小的自由块，现存的数据然后就被拷贝至新的位置，而老块则放回到堆上.这句话传递的一个重要的信息就是数据可能被移动</p> <pre><code class="prism language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;malloc.h&gt;</span></span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">char</span><span class="token operator">*</span>p<span class="token punctuation">,</span><span class="token operator">*</span>q<span class="token punctuation">;</span>       p<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       q<span class="token operator">=</span> p<span class="token punctuation">;</span>       p<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">realloc</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"p=0x%x/n"</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"q=0x%x/n"</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>       输出结果<span class="token operator">:</span>realloc后，内存地址不变               p<span class="token operator">=</span><span class="token number">0x431a70</span>               q<span class="token operator">=</span><span class="token number">0x431a70</span>         例<span class="token number">2</span><span class="token operator">:</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;malloc.h&gt;</span></span><span class="token keyword">int</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">char</span><span class="token operator">*</span>p<span class="token punctuation">,</span><span class="token operator">*</span>q<span class="token punctuation">;</span>       p<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       q<span class="token operator">=</span> p<span class="token punctuation">;</span>       p<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">realloc</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"p=0x%x/n"</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"q=0x%x/n"</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>       输出结果<span class="token operator">:</span>realloc后，内存地址发生了变化               p<span class="token operator">=</span><span class="token number">0x351c0</span>               q<span class="token operator">=</span><span class="token number">0x431a70</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-95875.htm">正规领养宠物流程表格图（领养宠物程序）</a></p>
                                        <p>下一个：<a href="/news/article-96599.htm">开宠物医院需要办什么证（开宠物医院需要什么许可证）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-75113.htm" title="宠物粮食加工厂加盟费多少钱一个月 宠物粮食加工厂加盟费多少钱一个月啊">宠物粮食加工厂加盟费多少钱一个月 宠物粮食加工厂加盟费多少钱一个月啊</a></li>
                        <li class="py-2"><a href="/news/article-82677.htm" title="附近领养狗狗 附近领养狗狗的地方">附近领养狗狗 附近领养狗狗的地方</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-winxray-node-share.htm" title="「3月12日」最高速度20.2M/S，2025年Xray每天更新免费机场订阅节点链接">「3月12日」最高速度20.2M/S，2025年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-95875.htm" title="正规领养宠物流程表格图（领养宠物程序）">正规领养宠物流程表格图（领养宠物程序）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-winxray-node-share.htm" title="「3月10日」最高速度20.9M/S，2025年Xray每天更新免费机场订阅节点链接">「3月10日」最高速度20.9M/S，2025年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-73096.htm" title="养猫打疫苗要花多少钱（养猫打疫苗要花多少钱呢）">养猫打疫苗要花多少钱（养猫打疫苗要花多少钱呢）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-14-free-subscribe-node.htm" title="「4月14日」最高速度21.8M/S，2025年Xray每天更新免费机场订阅节点链接">「4月14日」最高速度21.8M/S，2025年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-96594.htm" title="【C/C++】alloca、malloc、calloc、realloc的区别">【C/C++】alloca、malloc、calloc、realloc的区别</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-5-winxray-github.htm" title="「4月5日」最高速度21.8M/S，2025年Xray每天更新免费机场订阅节点链接">「4月5日」最高速度21.8M/S，2025年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-29-free-node-subscribe.htm" title="「3月29日」最高速度20M/S，2025年Xray每天更新免费机场订阅节点链接">「3月29日」最高速度20M/S，2025年Xray每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">45</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- Services Area End -->
    </main>
        <footer>
        <!--? Footer Start-->
        <div class="footer-area section-bg" data-background="/assets/website/img/xraywindows/gallery/footer_bg.jpg">
            <div class="container">
                <div class="footer-bottom">
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col-xl-9 col-lg-8">
                            <div class="footer-copy-right">
                                                    <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                                <p>
                                    Xray Windows节点订阅官网 版权所有 Powered by WordPress
                                </p>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-4">
                            <!-- Footer Social -->
                            <div class="footer-social f-right">
                                <a href="#"><i class="fab fa-twitter"></i></a>
                                <a href="https://www.facebook.com/sai4ull"><i class="fab fa-facebook-f"></i></a>
                                <a href="#"><i class="fas fa-globe"></i></a>
                                <a href="#"><i class="fab fa-instagram"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End-->
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <script src="/assets/website/js/frontend/xraywindows/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/xraywindows/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/popper.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/xraywindows/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/xraywindows/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/xraywindows/wow.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.magnific-popup.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/xraywindows/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.sticky.js"></script>

    <!-- contact js -->
    <script src="/assets/website/js/frontend/xraywindows/contact.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/mail-script.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/xraywindows/plugins.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>