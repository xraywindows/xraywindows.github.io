<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://xraywindows.github.io/news/article-20279.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>.Net项目在Docker容器中开发部署_实用技巧_</title>
        <meta name="description" content=".NET多年以前已经开始支持Docker，但由于国内.net现状，生产过程中几乎用不到docker支持，趁着有点时间捣鼓下。 先期工作 1、首先安装Docker Desktop 2、安装Visual " />
        <link rel="icon" href="__ADDON__/img/xraywindows/favicon.ico" type="image/x-icon"/>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/xraywindows/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/slick.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/xraywindows/style.css">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-3W6FX62N6S"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-3W6FX62N6S');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body class="body-bg" data-page="detail">
        <!--? Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img href="/assets/website/img/xraywindows/logo/loder.jpg" alt="">
                </div>
            </div>
        </div>
    </div>
    <header>
        <!-- Header Start -->
        <div class="header-area">
            <div class="main-header ">
                <div class="header-bottom  header-sticky">
                    <div class="container">
                        <div class="row align-items-center">
                            <!-- Logo -->
                            <div class="col-md-4">
                                <div class="logo">
                                                                        <a href="/"><span>Xray Windows</span></a>
                                                                    </div>
                            </div>
                            <div class="col-md-8">
                                <div class="menu-wrapper  d-flex align-items-center justify-content-end">
                                    <!-- Main-menu -->
                                    <div class="main-menu d-none d-lg-block">
                                        <nav>
                                            <ul id="navigation">
                                                                                                <li><a href="/">首页</a></li>
                                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                                                <li><a href="#">关于</a></li>
                                                <li><a href="#">联系</a></li>
                                            </ul>
                                        </nav>
                                    </div>
                                </div>
                            </div>
                            <!-- Mobile Menu -->
                            <div class="col-12">
                                <div class="mobile_menu d-block d-lg-none"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!--? Hero Start -->
        <div class="slider-area2">
            <div class="slider-height2 hero-overly2 d-flex align-items-center">
                <div class="container">
                    <div class="row">
                        <div class="col-xl-12">
                            <div class="hero-cap hero-cap2 text-center">
                                <h1>.Net项目在Docker容器中开发部署_实用技巧_</h1>
                                <p>
                                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--? Categories Area Start -->
        <div class="categories-area section-padding30">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<p>.NET多年以前已经开始支持Docker，但由于国内.net现状，生产过程中几乎用不到docker支持，趁着有点时间捣鼓下。</p> <h3>先期工作</h3> <p>1、首先安装Docker Desktop</p> <p>2、安装Visual Studio</p> <h3>创建项目</h3> <p>使用VS分别创建一个ASP.NET Core Api（WebApplication1）与 ASP.NET Core 应用（WebApplication2）</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/485088e7280ec8574c709da226d7a008.jpg"></p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/15d013e0996f80e734eafb79f18fa8f9.jpg"></p> <p>如果项目已经存在，可以选中项目，右键点击-&gt;选择添加Docker支持。</p> <p>在弹出对话框中选择Linux。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/eaa095fd2e91c47088dafde296d50bf5.jpg"></p> <p>项目支持docker后，会在项目下生成一个Dockerfile文件(用来构建Docker镜像的构建文件)</p> <p>内容如下：</p> <div class="ay1code"> <pre class="brush:plain;">#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.  #使用“小型”仅运行时基础映像开始一个阶段，将其称为“基础”，以供参考  FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base  # 在映像中创建 /app 目录 。  WORKDIR /app  # 公开端口 80 。  EXPOSE 80  #使用“大型”映像开始用于生成/发布的新阶段。将其称为“生成” ，以供参考。  FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build  #在映像中创建目录 /src 。  WORKDIR /src  #复制引用的 .csproj 项目文件，以便之后能够还原包 。  COPY ["WebApplication1/WebApplication1.csproj", "WebApplication1/"]  #还原项目和引用项目的包 。  RUN dotnet restore "WebApplication1/WebApplication1.csproj"  COPY . .  #将解决方案的所有目录树（.dockerignore 文件中包含的文件/目录除外）复制到映像中的 /src/项目 目录 。  WORKDIR "/src/WebApplication1"  #生成项目（和其他项目依赖项）并输出到映像中的 /app/build 目录 。  RUN dotnet build "WebApplication1.csproj" -c Release -o /app/build     #开始一个从“生成”继续的新阶段。将它称为“发布” 以进行引用。  FROM build AS publish     # 发布项目（和依赖项）并输出到映像中的 /app/publish 目录 。  RUN dotnet publish "WebApplication1.csproj" -c Release -o /app/publish     # 开始一个从“基础”继续的新阶段，并将其称为“最终”  FROM base AS final  #将当前目录更改为 /app  WORKDIR /app     #将 /app 目录从阶段“发布”复制到当前目录  COPY --from=publish /app/publish .     #定义启动容器时要运行的命令  ENTRYPOINT ["dotnet", "WebApplication1.dll"]</pre> </div> <p>以上说明参考.net官方文档，机器翻译不是很友好，但结合命令应该能看懂。</p> <h3>单容器运行</h3> <p>1、VS启动docker调试：</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/9b94f529ca85e3cc035f48299dd1de83.jpg"></p> <p>2、使用命令生成与启动镜像</p> <p>(1)编译镜像</p> <div class="ay1code"> <pre class="brush:ps;">docker build -f .\WebApplication1\Dockerfile -t webapi .  #此处注意Dockerfile文件所在的目录</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/b70a6611edd5bfd00977cddf00a060e1.jpg"></p> <p>(2)生成容器</p> <div class="ay1code"> <pre class="brush:ps;">docker run --name webapi -d -p 8060:80 api     --name 容器名  -d 后台运行  -p 端口映射</pre> </div> <p>此时访问接口：localhost:8060</p> <p>返回值：</p> <div class="ay1code"> <pre class="brush:js;">[      {          "date": "2022-03-17T09:25:15.9478769+08:00",          "temperatureC": -2,          "temperatureF": 29,          "summary": "Freezing"      },      {          "date": "2022-03-18T09:25:15.9490679+08:00",          "temperatureC": -7,          "temperatureF": 20,          "summary": "Bracing"      },      {          "date": "2022-03-19T09:25:15.9490738+08:00",          "temperatureC": 15,          "temperatureF": 58,          "summary": "Warm"      },      {          "date": "2022-03-20T09:25:15.9490742+08:00",          "temperatureC": 26,          "temperatureF": 78,          "summary": "Mild"      },      {          "date": "2022-03-21T09:25:15.9490743+08:00",          "temperatureC": -15,          "temperatureF": 6,          "summary": "Chilly"      }  ]</pre> </div> <h3>容器运行</h3> <p>1、右键点击WebApplication1应用，选择添加“容器业务流程协调程序支持”</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/e62440a741781eb89ee7d45feb560cc3.jpg"></p> <p>选择：“Linux”。</p> <p>添加完成后，解决方案中会自动生成：docker-compose项目，</p> <p>主要包含：docker-compose.yml文件，.dockerignore文件。</p> <ul> <li> <p>.dockerignore 文件包含你不希望 Docker 在容器中包含的文件类型和扩展名。这些文件通常与开发环境和源代码管理相关联，并不属于正在开发的应用或服务。</p> </li> <li> <p> docker-compose.yml是docker-compose的配置文件，docker-compose是docker提供的一个命令行工具，可以用于定义和运行多容器组成的应用。</p> </li> </ul> <p>  docker-compose.yml中生成的内容：</p> <div class="ay1code"> <pre class="brush:plain;">version: '3.4'   services:     webapplication1:      image: ${DOCKER_REGISTRY-}webapplication1      build:        context: .        dockerfile: WebApplication1/Dockerfile</pre> </div> <p>同样的操作为：WebApplication2添加“容器业务流程协调程序支持”</p> <p>最终docker-compose.yml内容为：</p> <div class="ay1code"> <pre class="brush:plain;">version: '3.4'     services:    webapplication2:      image: ${DOCKER_REGISTRY-}webapplication2      build:        context: .        dockerfile: WebApplication2/Dockerfile       webapplication1:      image: ${DOCKER_REGISTRY-}webapplication1      build:        context: .        dockerfile: WebApplication1/Dockerfile</pre> </div> <p>2、修改WebApplication2的HomeController：</p> <div class="ay1code"> <pre class="brush:csharp;">public async Task&lt;IActionResult&gt; Index()  {    ViewData["Message"] = "Hello from webfrontend";       using (var client = new System.Net.Http.HttpClient())    {      var request = new System.Net.Http.HttpRequestMessage();      request.RequestUri = new Uri("http://WebApplication1/WeatherForecast");      var response = await client.SendAsync(request);      ViewData["Message"] += " and " + await response.Content.ReadAsStringAsync();    }    return View();  }</pre> </div> <div class="ay1code"> <pre class="brush:csharp;">//因为 docker compose 在其自己的网络中设置主机名，  //以便服务名作为主机名显示给其他服务，  //所以这里使用的是主机名请求。  request.RequestUri = new Uri("http://WebApplication1/WeatherForecast");</pre> </div> <p>3、解决方案的启动项目设置为 docker-compose</p> <p>4、管理Docker Compose启动项</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/521ba10caa962e6767c5cde3526ea5f8.jpg"></p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/37c433ff238a3dc8cef7f56ba3da3fa7.jpg"></p> <p>配置完成后会将配置保存在docker-compose 项目中的launchSettings.json中:</p> <div class="ay1code"> <pre class="brush:js;">{    "profiles": {      "Docker Compose": {        "commandName": "DockerCompose",        "composeLaunchAction": "LaunchBrowser",        "composeLaunchServiceName": "webapplication2",        "composeLaunchUrl": "{Scheme}://localhost:{ServicePort}",        "commandVersion": "1.0",        "serviceActions": {          "webapplication1": "StartWithoutDebugging",          "webapplication2": "StartDebugging"        }      }    }  }</pre> </div> <p>5、F5启动项目</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/8faa0487a09e217c18e964fefbd1f334.jpg"></p> <h3>常见问题</h3> <p>首次启动可能会出现错误：</p> <div class="ay1code"> <pre class="brush:plain;">“error CTC1023: Dockerfile“...\Dockerfile”的调试程序路径“C:\Users\Administrator\vsdbg\vs2017u5”无效。”</pre> </div> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220415/1507291a2c5eaea9b4e9b2c256b596fa.jpg"></p> <p>解决办法：手动下载.zip包，如果浏览器下载太慢，可以考虑使用下载工具</p> <div class="ay1code"> <pre class="brush:plain;">https://vsdebugger.azureedge.net/vsdbg-17-0-10712-2/vsdbg-linux-x64.zip #其中17-0-10712-2（其中 17.0.10712.2 “.”替换成“-”）  https://vsdebugger.azureedge.net/vsdbg-17-0-10712-2/vsdbg-linux-musl-x64.zip #其中17-0-10712-2（其中 17.0.10712.2 “.”替换成“-”）  如果其他版本的，可以参考该方式，拼接URL下载</pre> </div> <p>以上两个包下载完毕后，按照以下步骤操作</p> <div class="ay1code"> <pre class="brush:plain;">1、将vsdbg-linux-x64.zip 解压到 %USERPROFILE%\vsdbg\vs2017u5 目录  (vs2017)  2、%USERPROFILE%\vsdbg\vs2017u5 目录,添加两个文件  success_rid.txt 内容填写：linux-x64  success_version.txt 内容填写：17.0.10712.2      3、将vsdbg-linux-musl-x64.zip 解压到 %USERPROFILE%\\vsdbg\vs2017u5\linux-musl-x64 目录 (vs2017,其他版本参考相似路径)  4、%USERPROFILE%\vsdbg\vs2017u5\linux-musl-x64 目录,添加两个文件  success_rid.txt 内容填写：linux-musl-x64  success_version.txt 内容填写：17.0.10712.2</pre> </div> <p>到此，项目算是跑起来了。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-19824.htm">2020三国杀武将台词总览图片（三国杀最新武将台词）</a></p>
                                        <p>下一个：<a href="/news/article-20280.htm">动物疫苗价格表最新图片高清大全 动物疫苗价格表最新图片高清大全集</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-10-4-winxray-node.htm" title="「10月4日」最高速度18.2M/S，2024年Xray每天更新免费机场订阅节点链接">「10月4日」最高速度18.2M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-13-free-node-subscribe.htm" title="「9月13日」最高速度19.1M/S，2024年Xray每天更新免费机场订阅节点链接">「9月13日」最高速度19.1M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-7-free-high-speed-nodes.htm" title="「9月7日」最高速度20.3M/S，2024年Xray每天更新免费机场订阅节点链接">「9月7日」最高速度20.3M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-20-winxray-windows.htm" title="「8月20日」最高速度18.7M/S，2024年Xray每天更新免费机场订阅节点链接">「8月20日」最高速度18.7M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-2-node-share-links.htm" title="「10月2日」最高速度18.8M/S，2024年Xray每天更新免费机场订阅节点链接">「10月2日」最高速度18.8M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-10-free-node-subscribe.htm" title="「10月10日」最高速度19.1M/S，2024年Xray每天更新免费机场订阅节点链接">「10月10日」最高速度19.1M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-14-free-high-speed-nodes.htm" title="「9月14日」最高速度22M/S，2024年Xray每天更新免费机场订阅节点链接">「9月14日」最高速度22M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-18-winxray-node-github.htm" title="「8月18日」最高速度19.5M/S，2024年Xray每天更新免费机场订阅节点链接">「8月18日」最高速度19.5M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-16-free-winxray-node.htm" title="「9月16日」最高速度18.3M/S，2024年Xray每天更新免费机场订阅节点链接">「9月16日」最高速度18.3M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-27-winxray-node-share.htm" title="「9月27日」最高速度18.8M/S，2024年Xray每天更新免费机场订阅节点链接">「9月27日」最高速度18.8M/S，2024年Xray每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">17</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- Services Area End -->
    </main>
        <footer>
        <!--? Footer Start-->
        <div class="footer-area section-bg" data-background="__ADDON__/img/xraywindows/gallery/footer_bg.jpg">
            <div class="container">
                <div class="footer-bottom">
                    <div class="row d-flex justify-content-between align-items-center">
                        <div class="col-xl-9 col-lg-8">
                            <div class="footer-copy-right">
                                <p>
                                    Xray Windows节点订阅官网 版权所有 Powered by WordPress
                                </p>
                            </div>
                        </div>
                        <div class="col-xl-3 col-lg-4">
                            <!-- Footer Social -->
                            <div class="footer-social f-right">
                                <a href="#"><i class="fab fa-twitter"></i></a>
                                <a href="https://www.facebook.com/sai4ull"><i class="fab fa-facebook-f"></i></a>
                                <a href="#"><i class="fas fa-globe"></i></a>
                                <a href="#"><i class="fab fa-instagram"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End-->
    </footer>
    <!-- Scroll Up -->
    <div id="back-top">
        <a title="Go to Top" href="#"> <i class="fas fa-level-up-alt"></i></a>
    </div>
    <!-- JS here -->
    <script src="/assets/website/js/frontend/xraywindows/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/xraywindows/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/popper.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/xraywindows/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/xraywindows/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/slick.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/xraywindows/wow.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.magnific-popup.js"></script>
    <!-- Nice-select, sticky -->
    <script src="/assets/website/js/frontend/xraywindows/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.sticky.js"></script>

    <!-- contact js -->
    <script src="/assets/website/js/frontend/xraywindows/contact.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/mail-script.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/xraywindows/plugins.js"></script>
    <script src="/assets/website/js/frontend/xraywindows/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>